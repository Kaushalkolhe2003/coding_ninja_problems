#include<bits/stdc++.h>
#include<queue> 
#include<unordered_map>
void bfs(vector<vector<int>> &adj,unordered_map<int,bool> &visited ,vector<int> &ans,int node){
    queue<int> q;
    q.push(node);
    visited[node]=1;

    while(!q.empty()){
        int front_node=q.front();
        q.pop();

        //front node store in ans...
        ans.push_back(front_node);

        //transverse all neighbours 

        for(auto i:adj[front_node]){
            if(!visited[i]){
                visited[i]=1;
                q.push(i);
                

            }
        }
    }
}
vector<int> bfsTraversal(int n, vector<vector<int>> &adj){
   
   vector<int> ans;
   unordered_map<int ,bool> visited;
   bfs(adj,visited,ans,0);

   return ans;
}
