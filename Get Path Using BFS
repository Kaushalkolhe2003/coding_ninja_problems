#include <bits/stdc++.h> 
vector<int> getPath(int V, int E, vector<int> a, vector<int> b, int v1, int v2) {
    map<int, list<int>>adj;
    map<int,bool>visited;
    map<int,int>parent; 
    vector<int>ans;

    for(int i=0; i<V; i++){
        visited[i] = false;
        parent[i] = -1;
    }
    for(int i=0; i<E; i++){
        adj[a[i]].push_back(b[i]);
        adj[b[i]].push_back(a[i]);
    }


    queue<int>q;
    q.push(v1);

    
    while(!q.empty()){
        int front = q.front(); q.pop();
        if(front==v2){
            int end = v2;
            while(end != -1){
                ans.push_back(end);
                end = parent[end];
            }
        }
        for(auto neighbours:adj[front]){
            if(!visited[neighbours]){
                parent[neighbours] = front;
                visited[neighbours] = true;
                q.push(neighbours);
            }
        }
        visited[front] = true;
    }

    return ans;
}
