#include <bits/stdc++.h> 
int partition(vector<int> &arr,int s,int e){
    int pivot=arr[s];
    // count just to place pivot at te location where we can have partition.
    
    int count=0;
    for(int i=s+1;i<=e;i++){
        if(arr[i]<=pivot){
         count++;   
        }
        
    }
    //place pivot at right place
    int pivotindex=s+count;
    swap(arr[pivotindex],arr[s]);
    int i=s, j=e;
    while(i < pivotindex && j > pivotindex){
        while(arr[i] <= pivot){
            i++;
        }
        while(arr[j] > pivot){
            j--;
        }
        if(i < pivotindex && j > pivotindex){
            swap(arr[i++],arr[j--]);
        }
    }
    return pivotindex;
    
}
void quicksort(vector<int> &arr,int s,int e){
    if(s>=e){
        return;
    }
    int p=partition(arr,s,e);
    
    //left part ko sort karo;;;
    quicksort(arr,s,p-1);
    
    //right part ko sort karo;;;
    quicksort(arr,p+1,e);
    
}
vector<int> quickSort(vector<int> arr)
{
    quicksort(arr,0,arr.size()-1);
    return arr;
}
