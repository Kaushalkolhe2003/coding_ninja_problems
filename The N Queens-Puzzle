#include <bits/stdc++.h> 
#include <vector>

using namespace std;

void copy(vector<vector<int>> &board, vector<vector<int>>& ans, int n) {
    vector<int> temp;
    for (int i = 0; i < n; i++) {
        for (int j = 0; j < n; j++) {
            temp.push_back(board[i][j]);
        }
    }
    ans.push_back(temp);
}

bool issafe(int row, int col, vector<vector<int>>& board, int n) {
    // Check column above current position
    for (int i = 0; i < row; i++) {
        if (board[i][col] == 1) {
            return false;
        }
    }

    // Check upper left diagonal
    for (int i = row, j = col; i >= 0 && j >= 0; i--, j--) {
        if (board[i][j] == 1) {
            return false;
        }
    }

    // Check upper right diagonal
    for (int i = row, j = col; i >= 0 && j < n; i--, j++) {
        if (board[i][j] == 1) {
            return false;
        }
    }

    return true;
}

void solve(int row, vector<vector<int>>& ans, vector<vector<int>>& board, int n) {
    if (row == n) {
        copy(board, ans, n);
        return;
    }

    for (int col = 0; col < n; col++) {
        if (issafe(row, col, board, n)) {
            board[row][col] = 1;
            solve(row + 1, ans, board, n);
            board[row][col] = 0; // Backtrack
        }
    }
}

vector<vector<int>> nQueens(int n) {
    vector<vector<int>> board(n, vector<int>(n, 0));
    vector<vector<int>> ans;

    solve(0, ans, board, n);

    return ans;
}
