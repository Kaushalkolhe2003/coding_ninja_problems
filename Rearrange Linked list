#include <bits/stdc++.h> 
/************************************************************

    Following is the linked list node structure

    template <typename T>
    class Node {
        public:
        T data;
        Node* next;

        Node(T data) {
            next = NULL;
            this->data = data;
        }

        ~Node() {
            if (next != NULL) {
                delete next;
            }
        }
    };

************************************************************/
Node<int> *reverseLL(Node <int> *head){
    Node <int> *prev=NULL;
    Node <int> *curr=head;
    Node <int> *forward=NULL;
    while(curr!=NULL){
        forward=curr->next;
        curr->next=prev;
        prev=curr;
        curr=forward;

    }
    return prev;

}
Node <int> * getmiddle(Node <int> *head){
    Node <int> *slow=head;
    Node <int> *fast=head->next;
    int cnt=0;
    while(fast->next!=NULL){
        fast=fast->next;
        if(fast->next!=NULL){
            fast=fast->next;
        }
        slow=slow->next;
       
    }
    return slow;
}
Node<int>* rearrangeList(Node<int>* head)
{
    if(head==NULL || head->next==NULL){
        return head;
    }
    Node<int> *mid=getmiddle(head);
    Node<int> *reverse_sec=reverseLL(mid->next);
    mid->next=NULL;
    Node <int> *first=head;
    Node<int> *sec=reverse_sec;
    while(sec!=NULL){
         Node<int>* nextFirst = first->next;
        Node<int>* nextSecond = sec->next;

        first->next = sec;
        sec->next = nextFirst;

        first = nextFirst;
        sec = nextSecond;
    }
    return head;
}
