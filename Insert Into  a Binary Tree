/************************************************************

    Following is the TreeNode class structure

    template <typename T>
    class TreeNode
    {
    public:
        T val;
        TreeNode<T> *left, *right;
        TreeNode() : val(0), left(NULL), right(NULL) {}
        TreeNode(T x) : val(x), left(NULL), right(NULL) {}
        TreeNode(T x, TreeNode<T> *left, TreeNode<T> *right) : val(x), left(left), right(right) {}
    };


************************************************************/

TreeNode<int>* insertionInBST(TreeNode<int>* root, int val)
{
    if(root==NULL){
        return new TreeNode<int> (val);
    }
    TreeNode<int> *temp=root;
  while(true){

    
    if(temp->val <= val){
        if(temp->right != NULL){
            temp=temp->right;
        }
        else{
            temp->right= new TreeNode<int> (val);
             break;
        }
       
    }
    else{
        if(temp->left != NULL){
            temp=temp->left;
        }
        else{
            temp->left= new TreeNode<int> (val);
            break;
        }
        
    }
  }
    return root;
}
