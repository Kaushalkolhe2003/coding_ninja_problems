/************************************************************

    Following is the TreeNode class structure

    template <typename T>
    class TreeNode {
       public:
        T data;
        TreeNode<T> *left;
        TreeNode<T> *right;

        TreeNode(T data) {
            this->data = data;
            left = NULL;
            right = NULL;
        }
    };

************************************************************/
int findposition(vector<int> &inorder,int element){
    for(int i=0;i<inorder.size();i++){
        if(inorder[i]==element){
            return i;
        }
    }
    return -1;
}
TreeNode<int> *solve(vector<int> &inorder,vector<int> &preorder,int &index,int inorderstart,int inorderend,int n){
    if(index>=n ||inorderstart >  inorderend){
        return NULL;
    }   
    int element=preorder[index++];
    TreeNode<int> *root=new TreeNode<int>(element);
    int position=findposition(inorder,element);

    root->left=solve(inorder,preorder,index,inorderstart,position-1,n);
    root->right=solve(inorder,preorder,index,position+1,inorderend,n);
    return root;

}
TreeNode<int> *buildBinaryTree(vector<int> &inorder, vector<int> &preorder)
{
    int preorderindex=0;

    TreeNode<int>*ans=solve(inorder,preorder,preorderindex,0,inorder.size()-1,preorder.size());
    return ans;
}
