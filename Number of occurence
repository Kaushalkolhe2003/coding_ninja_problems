int first_occ(vector<int>& arr, int n, int x){
	int s=0;
	int e=arr.size()-1;
	int ans=-1;
	int mid=s+(e-s)/2;
	while(s<=e){
		if(arr[mid]==x){
			ans=mid;
			e=mid-1;
		}
		else if(arr[mid]>x){
			e=mid-1;
		}
		else if(arr[mid]<x){
			s=mid+1;
		}
		mid=s+(e-s)/2;
	}
	return ans;
}

int last_occ(vector<int>& arr, int n, int x){
    int s=0;
    int e=arr.size()-1;
    int ans=-1;
    int mid=s+(e-s)/2;
    while(s<=e){
        if(arr[mid]==x){
            ans=mid;
            s=mid+1;
        }
        else if(arr[mid]>x){
            e=mid-1;
        }
        else if(arr[mid]<x){
            s=mid+1;
        }
        mid=s+(e-s)/2;
        
    }
    return ans;
}
int count(vector<int>& arr, int n, int x) {
	int a=first_occ(arr,n,x);
	int b=last_occ(arr,n,x);
	if(a>=0){
	return (b-a+1);
	}
	else{
		return 0;
	}
}
