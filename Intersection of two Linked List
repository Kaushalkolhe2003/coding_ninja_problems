/****************************************************************

    Following is the class structure of the Node class:

        class Node
        {
        public:
            int data;
            Node *next;
            Node()
            {
                this->data = 0;
                next = NULL;
            }
            Node(int data)
            {
                this->data = data;
                this->next = NULL;
            }
            Node(int data, Node* next)
            {
                this->data = data;
                this->next = next;
            }
        };

*****************************************************************/
int getlength(Node *head){
    int cnt=0;
    Node *temp=head;
    while(temp != NULL){
        temp=temp->next;
        cnt++;
    }
    return cnt;
}
Node* findIntersection(Node *firstHead, Node *secondHead)
{
    int len1=getlength(firstHead);
    int len2=getlength(secondHead);
    int diff=abs(len1 - len2);
    Node *tempA=firstHead;
    Node *tempB= secondHead;

    if(len1 > len2){
        for(int i=0;i<diff;++i){
            tempA=tempA->next;
        }
    }
    else{
        for(int i=0;i<diff;++i){
            tempB=tempB->next;
        }
    }
     while (tempA != NULL && tempB != NULL) {
            if (tempA == tempB) {
                return tempA;
            }
            tempA = tempA->next;
            tempB = tempB->next;
        }

        return NULL;

}
