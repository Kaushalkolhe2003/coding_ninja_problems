/************************************************************

    Following is the TreeNode class structure

    template <typename T>
    class TreeNode
    {
    public:
        T val;
        TreeNode<T> *left;
        TreeNode<T> *right;

        TreeNode(T val)
        {
            this->val = val;
            left = NULL;
            right = NULL;
        }
    };

************************************************************/

pair<bool,int> fast(TreeNode<int> * &root){
     if(root==NULL){
       pair<bool,int> p=make_pair(true,0);
       return p;
   }
   pair<int ,int>left=fast(root->left);
   pair<int,int> right=fast(root->right);

   bool left1=left.first;
   bool right1=right.first;

   bool diff=abs(left.second-right.second)<=1;
   pair<bool,int> ans;
   ans.second=max(left.second,right.second)+1;

   if(left1 && right1 &&diff){
       ans.first=true;
   }
   else{
       ans.second=false;
       
   }
   return ans;

}
bool isBalancedBT(TreeNode<int>* root){
  return fast(root).first;
}
